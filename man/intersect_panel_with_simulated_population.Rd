% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{intersect_panel_with_simulated_population}
\alias{intersect_panel_with_simulated_population}
\title{Intersect locations with populations}
\usage{
intersect_panel_with_simulated_population(panel_locs, simulated_population)
}
\arguments{
\item{panel_locs}{a data frame with 4 columns, chrom (character), start (numeric), end(numeric), target(character)}

\item{simulated_population}{a population generated with}
}
\value{
a table with chrom,start,end,target,within_sample_genotype(a within sample genotype),ancestral_index, simulated_sample (a name for the simulate sample, will just be a number in order of simulated population),ancestral_genotype(original genotype for target)
}
\description{
Intersect a table of genomic locations with simulated samples from a simulated population to get a table of final genotypes joined with what ancestral genotype they came from
}
\examples{
panel <- tibble(chrom = c("Pf3D7_04_v3", "Pf3D7_05_v3"), start = c(748173, 958071), end = c(748361, 958206), target = c("dhfr-1", "dhps-1"))
# simulate pop_alpha 9 (~10\% between sample relatedness), coi_r = 0.25, coi_p = 0.7 (COI mean of 1.256, ~80.4 proportion will be monoclonal), k_s = 0.5 (50\% of genotypes will be recombinant)
pop1 = sim_population(paste0("sample", seq(0,100,1)), 5, pop_alpha = 9, coi_r = 0.25, coi_p = 0.7, k_s = 0.5)
intersect_panel_with_simulated_population(panel, pop1)
}
